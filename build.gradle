buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}-${mod_phase}-${minecraft_version}"
group = "${mod_group}"
archivesBaseName = 'WaterSource'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            mods {
                watersource {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            mods {
                watersource {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            args '--mod', 'watersource', '--all', '--output', file('src/generated/resources/')

            mods {
                watersource {
                    source sourceSets.main
                }
            }
        }
    }
}
def info = [
        "Specification-Title": "Water Source",
        "Specification-Vendor": "Lemon Slice Studio",
        "Specification-Version": "1", // We are version 1 of ourselves
        "Implementation-Title": project.name,
        "Implementation-Version": "${version}",
        "Implementation-Vendor" :"Lemon Slice Studio",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
]
task deobfJar(type: Jar) {
    manifest {
        attributes(info)
    }
    from(sourceSets.main.output)
    archiveName = "${archivesBaseName}-${version}-deobf.${extension}"
}

artifacts {
    archives deobfJar
}

repositories {
    maven {
        name = "jei"
        url = "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        //for AutoRegLib and Quark
        name = "blamejared"
        url = "http://maven.blamejared.com/"
    }
    maven {
        url = "https://www.cursemaven.com"
    }
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"


    compile fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
    //compile fg.debof("vazkii.quark:Quark:r2.1-246.1182")
    //compile fg.deobf("curse.maven:simplefarming:3008632")
/*    compile fg.deobf("libs:simplefarming-1.15.2-1.3.0.jar")
    compile fg.deobf("libs:Quark-r2.1-246.1182.jar")
    compile fg.deobf("libs:carrotslib-mc1.15.2-2.5.jar")
    compile fg.deobf("libs:vanillafoodpantry-mc1.15.2-5.5.jar")*/

    //compile files("libs/After the Drizzle-${atd_version}-${minecraft_version}-deobf.jar")
    //compile files("libs/simplefarming-1.15.2-1.3.0-deobf.jar")
    //compile files("libs/AutoRegLib-1.5-41.80-deobf.jar")
}


jar {
    manifest {
        attributes(info)
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}